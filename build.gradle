buildscript {
    ext {
        spring_boot_version = '2.5.4'
    }
}

plugins {
    id 'org.springframework.boot' version "${spring_boot_version}"
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.simulator'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '16'

repositories {
    mavenCentral()

}

def spring_cloud_version = '3.0.4'
def lombok_version = '1.18.20'
def flogger_version = '0.4'
def openapi_version = '1.5.10'
def mysql_version = '8.0.15'

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web:${spring_boot_version}"
    testImplementation "org.springframework.boot:spring-boot-starter-test:${spring_boot_version}"
    implementation "org.springframework.boot:spring-boot-starter-aop:${spring_boot_version}"
    implementation "org.springframework.boot:spring-boot-starter-actuator:${spring_boot_version}"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:${spring_boot_version}"
    implementation "org.springframework.boot:spring-boot-starter-data-rest:${spring_boot_version}"


    implementation "org.springframework.cloud:spring-cloud-starter-sleuth:${spring_cloud_version}"


    implementation "org.springdoc:springdoc-openapi-ui:${openapi_version}"
//    implementation "org.springdoc:springdoc-openapi-webflux-ui:${openapi_version}"


    compileOnly "org.projectlombok:lombok:${lombok_version}"
    annotationProcessor "org.projectlombok:lombok:${lombok_version}"
    testCompileOnly "org.projectlombok:lombok:${lombok_version}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombok_version}"


    implementation "com.google.flogger:flogger:${flogger_version}"
    implementation "com.google.flogger:flogger-system-backend:${flogger_version}"


    implementation "mysql:mysql-connector-java:${mysql_version}"
    // implementation "com.h2database:h2"
    //  mongo


    implementation "com.google.maps:google-maps-services:1.0.0"


    // mockito,jupiter,cucumber,karate,pact
    // wiremock
    // terraform/istio(security,circuit breaker,telemetry)
    // grpc
    // spring cloud config
    // jenkins,
    // ELK integration, Zipkin
    // miscellanious: pagenation, webflux??
}

test {
    useJUnitPlatform()
}
